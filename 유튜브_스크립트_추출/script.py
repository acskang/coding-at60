import os.path as 폴더관리자
import json
from youtube_transcript_api import YouTubeTranscriptApi as 유튜브대본수집기
from youtube_transcript_api.formatters import Formatter
from youtube_transcript_api.formatters import JSONFormatter
from youtube_transcript_api.formatters import TextFormatter
from youtube_transcript_api.formatters import WebVTTFormatter
from youtube_transcript_api.formatters import SRTFormatter

원본대본 = "WpF6azYAxYg"
대본파일 = f"./{원본대본}.txt"
대본파일_ko = f"./{원본대본}_ko.txt"
대본파일_메타 = f"./{원본대본}_meta.txt"
대본파일_유무 = 폴더관리자.isfile(대본파일)

# 대본파일 활용
def 대본파일_활용():
    with open(대본파일, 'r') as f:
        대본 = json.load(f)
    
    for 대사 in 대본:
        분 = int(대사['start']) // 60
        초 = int(대사['start']) % 60
        print(f"{분:>2}:{초:>2} - {대사['text']}")


# 유튜브에서 대본 수집 및 저장
def 대본_수집():
    # 대본 수집
    수집대본 = 유튜브대본수집기.get_transcript(원본대본)
    
    # 대본 포맷화
    제이슨포맷 = JSONFormatter()
    포맷대본 = 제이슨포맷.format_transcript(수집대본)
    
    # 포맷대본으로 저장
    with open(대본파일, 'w', encoding='utf-8') as f:
        f.write(포맷대본)


if 대본파일_유무:
    # 대본파일 활용
    대본파일_활용()
else:
    # 대본 수집 및 대본파일 생성
    대본_수집()
    # 대본 활용
    대본파일_활용()
    
# class 대본:
#     원본대본 = "유튜브 비디오 번호"
#     수집대본 = "유튜브에서 수집 직후의 상태"
#     포맷대본 = "특정 포맷으로 변환"
#     대본파일 = "대본 저장 파일"


# 대본목록 = 유튜브대본수집기.list_transcripts(원본대본)
# for 대본메타 in 대본목록:
#     print (
#         대본메타.video_id,
#         대본메타.language,
#         대본메타.language_code,
#         # whether it has been manually created or generated by YouTube
#         대본메타.is_generated,
#         # whether this 대본메타 can be translated or not
#         대본메타.is_translatable,  
#     )

# 한글대본 = 대본메타.translate('ko').fetch()
# 제이슨포맷 = JSONFormatter()
# 포맷대본 = 제이슨포맷.format_transcript(한글대본)
# with open("한글파일.txt", 'w', encoding='utf-8') as f:
#     f.write(포맷대본)